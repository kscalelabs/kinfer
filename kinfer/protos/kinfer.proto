syntax = "proto3";

package kinfer;

/* --------------- *
 * Joint Positions *
 * --------------- */

enum JointPositionUnit {
    DEGREES = 0;
    RADIANS = 1;
}

message JointPositionValue {
    string joint_name = 1;
    float value = 2;
    JointPositionUnit unit = 3;
}

message JointPositionsSchema {
    JointPositionUnit unit = 1;
    repeated string joint_names = 2;
}

message JointPositionsValue {
    repeated JointPositionValue values = 1;
}

/* ---------------- *
 * Joint Velocities *
 * ---------------- */

enum JointVelocityUnit {
    DEGREES_PER_SECOND = 0;
    RADIANS_PER_SECOND = 1;
}

message JointVelocityValue {
    string joint_name = 1;
    float value = 2;
    JointVelocityUnit unit = 3;
}

message JointVelocitiesSchema {
    JointVelocityUnit unit = 1;
    repeated string joint_names = 2;
}

message JointVelocitiesValue {
    repeated JointVelocityValue values = 1;
}

/* -------------- *
 * Joint Torques *
 * -------------- */

enum JointTorqueUnit {
    NEWTON_METERS = 0;
}

message JointTorqueValue {
    string joint_name = 1;
    float value = 2;
    JointTorqueUnit unit = 3;
}

message JointTorquesSchema {
    JointTorqueUnit unit = 1;
    repeated string joint_names = 2;
}

message JointTorquesValue {
    repeated JointTorqueValue values = 1;
}

/* ------------ *
 * Camera Frame *
 * ------------ */

message CameraFrameSchema {
    int32 width = 1;
    int32 height = 2;
    int32 channels = 3;
}

message CameraFrameValue {
    bytes data = 1;
}

/* ----------- *
 * Audio Frame *
 * ----------- */

message AudioFrameSchema {
    int32 channels = 1;
    int32 sample_rate = 2;
    int32 bytes_per_sample = 3;
}

message AudioFrameValue {
    bytes data = 1;
}

/* --- *
 * IMU *
 * --- */

message IMUAccelerometerValue {
    float x = 1;
    float y = 2;
    float z = 3;
}

message IMUGyroscopeValue {
    float x = 1;
    float y = 2;
    float z = 3;
}

message IMUMagnetometerValue {
    float x = 1;
    float y = 2;
    float z = 3;
}

message IMUSchema {
    bool use_accelerometer = 1;
    bool use_gyroscope = 2;
    bool use_magnetometer = 3;
}

message IMUValue {
    IMUAccelerometerValue linear_acceleration = 1;
    IMUGyroscopeValue angular_velocity = 2;
    IMUMagnetometerValue magnetic_field = 3;
}

/* --------- *
 * Timestamp *
 * --------- */

message TimestampSchema {
    int64 start_seconds = 1;
    int32 start_nanos = 2;
}

message TimestampValue {
    int64 seconds = 1;
    int32 nanos = 2;
}

/* ------------------- *
 * XY Position Command *
 * ------------------- */

message VectorCommandSchema {
    int32 dimensions = 1;
}

message VectorCommandValue {
    repeated float values = 1;
}

/* ------------ *
 * State Tensor *
 * ------------ */

message StateTensorSchema {
    repeated int32 shape = 1;
}

message StateTensorValue {
    bytes data = 1;
}

/* ----- *
 * Value *
 * ----- */

message Value {
    string value_name = 1;
    oneof value {
        JointPositionsValue joint_positions = 2;
        JointVelocitiesValue joint_velocities = 3;
        JointTorquesValue joint_torques = 4;
        CameraFrameValue camera_frame = 5;
        AudioFrameValue audio_frame = 6;
        IMUValue imu = 7;
        TimestampValue timestamp = 8;
        VectorCommandValue vector_command = 9;
        StateTensorValue state_tensor = 10;
    }
}

message ValueSchema {
    string value_name = 1;
    oneof value_type {
        JointPositionsSchema joint_positions = 2;
        JointVelocitiesSchema joint_velocities = 3;
        JointTorquesSchema joint_torques = 4;
        CameraFrameSchema camera_frame = 5;
        AudioFrameSchema audio_frame = 6;
        IMUSchema imu = 7;
        TimestampSchema timestamp = 8;
        VectorCommandSchema vector_command = 9;
        StateTensorSchema state_tensor = 10;
    }
}

/* ------ *
 * Inputs *
 * ------ */

message InputSchema {
    repeated ValueSchema inputs = 1;
}

message Input {
    repeated Value inputs = 1;
}

/* ------- *
 * Outputs *
 * ------- */

message OutputSchema {
    repeated ValueSchema outputs = 1;
}

message Output {
    repeated Value outputs = 1;
}
