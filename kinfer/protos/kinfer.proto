syntax = "proto3";

package kinfer;

/* ------ *
 * Tensor *
 * ------ */

message TensorSchema {
    repeated int32 shape = 1;
}

message TensorValue {
    repeated float data = 1;
}

/* --------------- *
 * Joint Positions *
 * --------------- */

enum JointPositionUnit {
    DEGREES = 0;
    RADIANS = 1;
}

message JointPositionValue {
    string name = 1;
    float value = 2;
    JointPositionUnit unit = 3;
}

message JointPositionsSchema {
    JointPositionUnit unit = 1;
    repeated string joint_names = 2;
}

message JointPositionsValue {
    repeated JointPositionValue values = 1;
}

/* ---------------- *
 * Joint Velocities *
 * ---------------- */

enum JointVelocityUnit {
    DEGREES_PER_SECOND = 0;
    RADIANS_PER_SECOND = 1;
}

message JointVelocityValue {
    string name = 1;
    float value = 2;
    JointVelocityUnit unit = 3;
}

message JointVelocitiesSchema {
    JointVelocityUnit unit = 1;
    repeated string joint_names = 2;
}

message JointVelocitiesValue {
    repeated JointVelocityValue values = 1;
}

/* -------------- *
 * Joint Torques *
 * -------------- */

enum JointTorqueUnit {
    NEWTON_METERS = 0;
}

message JointTorqueValue {
    string name = 1;
    float value = 2;
    JointTorqueUnit unit = 3;
}

message JointTorquesSchema {
    JointTorqueUnit unit = 1;
    repeated string joint_names = 2;
}

message JointTorquesValue {
    repeated JointTorqueValue values = 1;
}

/* ------------ *
 * Camera Frame *
 * ------------ */

message CameraFrameSchema {
    int32 width = 1;
    int32 height = 2;
    int32 channels = 3;
}

message CameraFrameValue {
    bytes data = 1;
}

/* ----------- *
 * Audio Frame *
 * ----------- */

message AudioFrameSchema {
    int32 channels = 1;
    int32 sample_rate = 2;
    int32 bytes_per_sample = 3;
}

message AudioFrameValue {
    bytes data = 1;
}

/* --- *
 * IMU *
 * --- */

enum IMUValueType {
    QUATERNION = 0;
    EULER_ANGLES = 1;
}

message IMUSchema {
    IMUValueType value_type = 1;
}

message IMUValue {
    float x = 1;
    float y = 2;
    float z = 3;
    float w = 4;
}

/* --------- *
 * Timestamp *
 * --------- */

message TimestampSchema {
    int64 start_seconds = 1;
    int32 start_nanos = 2;
}

message TimestampValue {
    int64 seconds = 1;
    int32 nanos = 2;
}

/* ----- *
 * Value *
 * ----- */

message Value {
    string name = 1;
    oneof value {
        TensorValue tensor = 2;
        JointPositionsValue joint_positions = 3;
        JointVelocitiesValue joint_velocities = 4;
        JointTorquesValue joint_torques = 5;
        CameraFrameValue camera_frame = 6;
        AudioFrameValue audio_frame = 7;
        IMUValue imu = 8;
        TimestampValue timestamp = 9;
    }
}

message ValueSchema {
    string name = 1;
    oneof value_type {
        TensorSchema tensor = 2;
        JointPositionsSchema joint_positions = 3;
        JointVelocitiesSchema joint_velocities = 4;
        JointTorquesSchema joint_torques = 5;
        CameraFrameSchema camera_frame = 6;
        AudioFrameSchema audio_frame = 7;
        IMUSchema imu = 8;
        TimestampSchema timestamp = 9;
    }
}

/* ------ *
 * Inputs *
 * ------ */

message InputSchema {
    repeated ValueSchema inputs = 1;
}

message Input {
    repeated Value inputs = 1;
}

/* ------- *
 * Outputs *
 * ------- */

message OutputSchema {
    repeated ValueSchema outputs = 1;
}

message Output {
    repeated Value outputs = 1;
}
